.TH  "qm_selinux"  "8"  "23-04-11" "qm" "SELinux Policy qm"
.SH "NAME"
qm_selinux \- Security Enhanced Linux Policy for the qm processes
.SH "DESCRIPTION"

Security-Enhanced Linux secures the qm processes via flexible mandatory access control.

The qm processes execute with the qm_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.

For example:

.B ps -eZ | grep qm_t


.SH "ENTRYPOINTS"

The qm_t SELinux type can be entered via the \fBqm_file_type\fP file type.

The default entrypoint paths for the qm_t domain are the following:


.SH PROCESS TYPES
SELinux defines process types (domains) for each process running on the system
.PP
You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
.PP
Policy governs the access confined processes have to files.
SELinux qm policy is very flexible allowing users to setup their qm processes in as secure a method as possible.
.PP
The following process types are defined for qm:

.EX
.B qm_t, qm_container_t, qm_container_kvm_t, qm_container_init_t, qmail_clean_t, qmail_inject_t, qmail_local_t, qmail_lspawn_t, qmail_queue_t, qmail_remote_t, qmail_rspawn_t, qmail_send_t, qmail_smtpd_t, qmail_splogger_t, qmail_start_t, qmail_tcp_env_t
.EE
.PP
Note:
.B semanage permissive -a qm_t
can be used to make the process type qm_t permissive. SELinux does not deny access to permissive process types, but the AVC (SELinux denials) messages are still generated.

.SH BOOLEANS
SELinux policy is customizable based on least access required.  qm policy is extremely flexible and has several booleans that allow you to manipulate the policy and run qm with the tightest access possible.


.PP
If you want to allow all domains to execute in fips_mode, you must turn on the fips_mode boolean. Enabled by default.

.EX
.B setsebool -P fips_mode 1

.EE

.SH "MANAGED FILES"

The SELinux process type qm_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.

.br
.B cgroup_t

	/sys/fs/cgroup
.br

.br
.B initrc_tmp_t


.br
.B mnt_t

	/mnt(/[^/]*)?
.br
	/mnt(/[^/]*)?
.br
	/rhev(/[^/]*)?
.br
	/rhev/[^/]*/.*
.br
	/media(/[^/]*)?
.br
	/media(/[^/]*)?
.br
	/media/\.hal-.*
.br
	/var/run/media(/[^/]*)?
.br
	/afs
.br
	/net
.br
	/misc
.br
	/rhev
.br

.br
.B net_conf_t

	/etc/hosts[^/]*
.br
	/etc/yp\.conf.*
.br
	/etc/denyhosts.*
.br
	/etc/hosts\.deny.*
.br
	/etc/resolv\.conf.*
.br
	/etc/\.resolv\.conf.*
.br
	/etc/resolv-secure.conf.*
.br
	/var/run/cloud-init(/.*)?
.br
	/var/run/systemd/network(/.*)?
.br
	/etc/sysconfig/networking(/.*)?
.br
	/etc/sysconfig/network-scripts(/.*)?
.br
	/etc/sysconfig/network-scripts/.*resolv\.conf
.br
	/var/run/NetworkManager/resolv\.conf.*
.br
	/etc/ethers
.br
	/etc/ntp\.conf
.br
	/var/run/systemd/resolve/resolv\.conf
.br
	/var/run/systemd/resolve/stub-resolv\.conf
.br
	/var/run/NetworkManager/no-stub-resolv\.conf
.br

.br
.B qm_file_type


.br
.B security_t

	/selinux
.br

.br
.B tmp_t

	/sandbox(/.*)?
.br
	/tmp
.br
	/usr/tmp
.br
	/var/tmp
.br
	/var/tmp
.br
	/tmp-inst
.br
	/var/tmp-inst
.br
	/var/tmp/tmp-inst
.br
	/var/tmp/vi\.recover
.br

.SH FILE CONTEXTS
SELinux requires files to have an extended attribute to define the file type.
.PP
You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
.PP
Policy governs the access confined processes have to these files.
SELinux qm policy is very flexible allowing users to setup their qm processes in as secure a method as possible.
.PP

.PP
.B STANDARD FILE CONTEXT

SELinux defines the file context types for the qm, if you wanted to
store files with these types in a different paths, you need to execute the semanage command to specify alternate labeling and then use restorecon to put the labels on disk.

.B semanage fcontext -a -t qm_file_t '/srv/qm/content(/.*)?'
.br
.B restorecon -R -v /srv/myqm_content

Note: SELinux often uses regular expressions to specify labels that match multiple files.

.I The following file types are defined for qm:


.EX
.PP
.B qm_container_kvm_var_run_t
.EE

- Set files with the qm_container_kvm_var_run_t type, if you want to store the qm container kvm files under the /run or /var/run directory.


.EX
.PP
.B qm_container_ro_file_t
.EE

- Set files with the qm_container_ro_file_t type, if you want to treat the files as qm container ro content.

.br
.TP 5
Paths:
/usr/lib/qm/rootfs/var/lib/containers/storage/overlay(/.*)?, /usr/lib/qm/rootfs/var/lib/containers/storage/overlay2(/.*)?, /usr/lib/qm/rootfs/var/lib/containers/storage/overlay-images(/.*)?, /usr/lib/qm/rootfs/var/lib/containers/storage/overlay-layers(/.*)?, /usr/lib/qm/rootfs/var/lib/containers/storage/overlay2-images(/.*)?, /usr/lib/qm/rootfs/var/lib/containers/storage/overlay2-layers(/.*)?

.EX
.PP
.B qm_container_var_lib_t
.EE

- Set files with the qm_container_var_lib_t type, if you want to store the qm container files under the /var/lib directory.


.EX
.PP
.B qm_file_t
.EE

- Set files with the qm_file_t type, if you want to treat the files as qm content.


.EX
.PP
.B qmail_alias_home_t
.EE

- Set files with the qmail_alias_home_t type, if you want to store qmail alias files in the users home directory.

.br
.TP 5
Paths:
/var/qmail/alias(/.*)?, /var/qmail/alias

.EX
.PP
.B qmail_clean_exec_t
.EE

- Set files with the qmail_clean_exec_t type, if you want to transition an executable to the qmail_clean_t domain.


.EX
.PP
.B qmail_etc_t
.EE

- Set files with the qmail_etc_t type, if you want to store qmail files in the /etc directories.

.br
.TP 5
Paths:
/var/qmail/owners(/.*)?, /var/qmail/control(/.*)?

.EX
.PP
.B qmail_exec_t
.EE

- Set files with the qmail_exec_t type, if you want to transition an executable to the qmail_t domain.


.EX
.PP
.B qmail_inject_exec_t
.EE

- Set files with the qmail_inject_exec_t type, if you want to transition an executable to the qmail_inject_t domain.


.EX
.PP
.B qmail_keytab_t
.EE

- Set files with the qmail_keytab_t type, if you want to treat the files as kerberos keytab files.


.EX
.PP
.B qmail_local_exec_t
.EE

- Set files with the qmail_local_exec_t type, if you want to transition an executable to the qmail_local_t domain.


.EX
.PP
.B qmail_lspawn_exec_t
.EE

- Set files with the qmail_lspawn_exec_t type, if you want to transition an executable to the qmail_lspawn_t domain.


.EX
.PP
.B qmail_queue_exec_t
.EE

- Set files with the qmail_queue_exec_t type, if you want to transition an executable to the qmail_queue_t domain.


.EX
.PP
.B qmail_remote_exec_t
.EE

- Set files with the qmail_remote_exec_t type, if you want to transition an executable to the qmail_remote_t domain.


.EX
.PP
.B qmail_rspawn_exec_t
.EE

- Set files with the qmail_rspawn_exec_t type, if you want to transition an executable to the qmail_rspawn_t domain.


.EX
.PP
.B qmail_send_exec_t
.EE

- Set files with the qmail_send_exec_t type, if you want to transition an executable to the qmail_send_t domain.


.EX
.PP
.B qmail_smtpd_exec_t
.EE

- Set files with the qmail_smtpd_exec_t type, if you want to transition an executable to the qmail_smtpd_t domain.


.EX
.PP
.B qmail_splogger_exec_t
.EE

- Set files with the qmail_splogger_exec_t type, if you want to transition an executable to the qmail_splogger_t domain.


.EX
.PP
.B qmail_spool_t
.EE

- Set files with the qmail_spool_t type, if you want to store the qmail files under the /var/spool directory.


.EX
.PP
.B qmail_start_exec_t
.EE

- Set files with the qmail_start_exec_t type, if you want to transition an executable to the qmail_start_t domain.


.EX
.PP
.B qmail_tcp_env_exec_t
.EE

- Set files with the qmail_tcp_env_exec_t type, if you want to transition an executable to the qmail_tcp_env_t domain.


.PP
Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
.B semanage fcontext
command.  This will modify the SELinux labeling database.  You will need to use
.B restorecon
to apply the labels.

.SH "COMMANDS"
.B semanage fcontext
can also be used to manipulate default file context mappings.
.PP
.B semanage permissive
can also be used to manipulate whether or not a process type is permissive.
.PP
.B semanage module
can also be used to enable/disable/install/remove policy modules.

.B semanage boolean
can also be used to manipulate the booleans

.PP
.B system-config-selinux
is a GUI tool available to customize SELinux policy settings.

.SH AUTHOR
This manual page was auto-generated using
.B "sepolicy manpage".

.SH "SEE ALSO"
selinux(8), qm(8), semanage(8), restorecon(8), chcon(1), sepolicy(8), setsebool(8), qm_container_selinux(8), qm_container_selinux(8), qm_container_init_selinux(8), qm_container_init_selinux(8), qm_container_kvm_selinux(8), qm_container_kvm_selinux(8)